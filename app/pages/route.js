/**
 * This file is automatically generated from `/config/route.mustache`,
 * DO NOT modify this file directly.
 */

import module from './module';

module.config(/* @ngInject */($stateProvider, $locationProvider, $urlRouterProvider) => {
    const templates = {};

    function pageHandle(pageName, pageInfo, resolve) {
        templates[pageName] = pageInfo.template;
        resolve();
    }

    function lazyLoadPage(pageName) {
        return new Promise((resolve) => {
            switch (pageName) {
            case 'dashboard':
                require.ensure(['./dashboard/index'], (require) => {
                    pageHandle(pageName, require('./dashboard/index'), resolve);
                });
                break;
            case 'home':
                require.ensure(['./home/index'], (require) => {
                    pageHandle(pageName, require('./home/index'), resolve);
                });
                break;
            case 'profile':
                require.ensure(['./profile/index'], (require) => {
                    pageHandle(pageName, require('./profile/index'), resolve);
                });
                break;
            default:
                break;
            }
        });
    }

    $stateProvider
        .state('dashboard', {
            url: '/dashboard',
            templateProvider() {
                return templates.dashboard || 'fail to load template';
            },
            controller: 'dashboardCtrl',
            resolve: { lazyLoad() { return lazyLoadPage('dashboard'); } },
        })
        .state('home', {
            url: '/',
            templateProvider() {
                return templates.home || 'fail to load template';
            },
            controller: 'homeCtrl',
            resolve: { lazyLoad() { return lazyLoadPage('home'); } },
        })
        .state('profile', {
            url: '/profile',
            templateProvider() {
                return templates.profile || 'fail to load template';
            },
            controller: 'profileCtrl',
            resolve: { lazyLoad() { return lazyLoadPage('profile'); } },
        })
;

    /**
    * looks like futureState is not compatible with urlRouterProvider.otherwise
    */
    $urlRouterProvider.otherwise('/');

    // 启用 html5 history
    $locationProvider.html5Mode(true);
});
